//! Autogenerated weights for `pallet_evm_precompile`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-10, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `bernardo-benchmarking`, CPU: `AMD EPYC 7B13`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/frontier-template-node
// benchmark
// pallet
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_evm_precompile
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

pub trait WeightInfo {
    fn add_precompile() -> Weight;
    fn remove_precompile() -> Weight;
}

/// Weight functions for `pallet_evm_precompile`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EVMPrecompile Precompiles (r:0 w:1)
	/// Proof: EVMPrecompile Precompiles (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	fn add_precompile() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `30`
		//  Estimated: `2023`
		// Minimum execution time: 18_840 nanoseconds.
		Weight::from_ref_time(19_460_000)
			.saturating_add(Weight::from_proof_size(2023))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: EVMPrecompile Precompiles (r:1 w:1)
	/// Proof: EVMPrecompile Precompiles (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	fn remove_precompile() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `154`
		//  Estimated: `4691`
		// Minimum execution time: 24_460 nanoseconds.
		Weight::from_ref_time(25_180_000)
			.saturating_add(Weight::from_proof_size(4691))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
}

impl WeightInfo for () {
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EVMPrecompile Precompiles (r:0 w:1)
	/// Proof: EVMPrecompile Precompiles (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	fn add_precompile() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `30`
		//  Estimated: `2023`
		// Minimum execution time: 18_840 nanoseconds.
		Weight::from_ref_time(19_460_000)
			.saturating_add(Weight::from_proof_size(2023))
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	/// Storage: EVMPrecompile Precompiles (r:1 w:1)
	/// Proof: EVMPrecompile Precompiles (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	fn remove_precompile() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `154`
		//  Estimated: `4691`
		// Minimum execution time: 24_460 nanoseconds.
		Weight::from_ref_time(25_180_000)
			.saturating_add(Weight::from_proof_size(4691))
			.saturating_add(RocksDbWeight::get().reads(5))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
}